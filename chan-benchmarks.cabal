-- Initial chan-benchmarks.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                chan-benchmarks
version:             0.1.0.0
license:             BSD3
license-file:        LICENSE
author:              Brandon Simmons
maintainer:          brandon.m.simmons@gmail.com
build-type:          Simple
cabal-version:       >=1.10

-- We provide two executables which run on a single core and all available
-- cores, respectively. Benchmarks to be tested live in Benchmarks.hs.
-- There is some overlap in which tests are run in which, but we omit tests
-- from bench-multi where we suspect running on multiple cores only confuses
-- things, and omit tests from bench-single where a test on a single core wouldn't
-- be relevant (e.g. testing contention or the scheduler directly)

executable bench-single
  main-is:           Main1.hs
  other-modules:     Benchmarks
  build-depends:       base >=4.6 && <4.7
                     , stm
                     , async
                     , criterion
                     , primitive
                     -- for kicks (you might have to get this from Github):
                     , atomic-primops == 0.5
            -- other chans:
                     , chan-split-fast
                     -- provides more capabilities than `chan-split-fast`:
                     , split-channel
              --TODO (other FIFO chans/queues with blocking read):
                   --, cml
              --TODO (lock-free queues, maybe just the write-all-read-all test for now):
                   --, chaselev-deque
                   --, lockfree-queue

  -- Still testing the threaded runtime, but removing OS thread scheduling from
  -- the picture:
  ghc-options: -O2  -rtsopts  -threaded -with-rtsopts=-N1
  ghc-options: -fforce-recomp
  default-language:    Haskell2010


executable bench-multi
  main-is:           MainN.hs
  other-modules:     Benchmarks
  build-depends:       base >=4.6 && <4.7
                     , stm
                     , async
                     , criterion
                     , primitive
            -- other chans:
                     , chan-split-fast
                     -- provides more capabilities than `chan-split-fast`:
                     , split-channel
              --TODO (other FIFO chans/queues with blocking read):
                   --, cml
              --TODO (lock-free queues, maybe just the write-all-read-all test for now):
                   --, chaselev-deque
                   --, lockfree-queue

  -- We fix this to 2 cores, so that we can be a little less careful about how
  -- we write and interpret our tests.
  -- These would be interesting to play with on a >2 core machine:
  --    -feager-blackholing  -qa   -qg1
  ghc-options: -O2  -rtsopts  -threaded -with-rtsopts=-N2
  ghc-options: -fforce-recomp
  default-language:    Haskell2010
